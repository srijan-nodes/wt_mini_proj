{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dsrij\\\\clg\\\\sem3\\\\wt\\\\wtmini\\\\wt_mini\\\\src\\\\components\\\\LoginRegister.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginRegister = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleEmailChange = e => setEmail(e.target.value);\n  const handlePasswordChange = e => setPassword(e.target.value);\n  const handleConfirmPasswordChange = e => setConfirmPassword(e.target.value);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage('');\n    setSuccessMessage('');\n    if (isLogin) {\n      return;\n    }\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccessMessage('Registration successful! You can now login.');\n      } else {\n        setErrorMessage(data.error || 'Registration failed');\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setErrorMessage('An error occurred during registration.');\n    }\n  };\n\n  // Updated deleteUser function\n  const deleteUser = async () => {\n    setErrorMessage('');\n    setSuccessMessage('');\n    if (!email) {\n      setErrorMessage('Email is required to delete the account');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/delete', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        }) // Send email in the request body\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccessMessage('Account deleted successfully.');\n        setEmail(''); // Clear the email field after deletion\n        setPassword('');\n        setConfirmPassword('');\n        setIsLogin(true); // After deletion, switch back to login form\n      } else {\n        setErrorMessage(data.message || 'Failed to delete user');\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setErrorMessage('An error occurred while deleting the account.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 26\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        required: true,\n        value: confirmPassword,\n        onChange: handleConfirmPasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), !isLogin && email && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteUser,\n      style: {\n        marginTop: '10px',\n        backgroundColor: 'red',\n        color: 'white'\n      },\n      children: \"Delete Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => setIsLogin(!isLogin),\n      children: isLogin ? 'Need to register?' : 'Already have an account? Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginRegister, \"ChyzvSLUB89sgUoKVDx9y72FGTE=\");\n_c = LoginRegister;\nexport default LoginRegister;\nvar _c;\n$RefreshReg$(_c, \"LoginRegister\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginRegister","_s","isLogin","setIsLogin","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleEmailChange","e","target","value","handlePasswordChange","handleConfirmPasswordChange","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","err","console","deleteUser","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","placeholder","required","onChange","onClick","marginTop","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/dsrij/clg/sem3/wt/wtmini/wt_mini/src/components/LoginRegister.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginRegister = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handleEmailChange = (e) => setEmail(e.target.value);\r\n  const handlePasswordChange = (e) => setPassword(e.target.value);\r\n  const handleConfirmPasswordChange = (e) => setConfirmPassword(e.target.value);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage('');\r\n    setSuccessMessage('');\r\n\r\n    if (isLogin) {\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setErrorMessage('Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setSuccessMessage('Registration successful! You can now login.');\r\n      } else {\r\n        setErrorMessage(data.error || 'Registration failed');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error:', err);\r\n      setErrorMessage('An error occurred during registration.');\r\n    }\r\n  };\r\n\r\n  // Updated deleteUser function\r\n  const deleteUser = async () => {\r\n    setErrorMessage('');\r\n    setSuccessMessage('');\r\n\r\n    if (!email) {\r\n      setErrorMessage('Email is required to delete the account');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/delete', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email }),  // Send email in the request body\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setSuccessMessage('Account deleted successfully.');\r\n        setEmail('');  // Clear the email field after deletion\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setIsLogin(true);  // After deletion, switch back to login form\r\n      } else {\r\n        setErrorMessage(data.message || 'Failed to delete user');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error:', err);\r\n      setErrorMessage('An error occurred while deleting the account.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>{isLogin ? 'Login' : 'Register'}</h1>\r\n\r\n      {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={handleEmailChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={handlePasswordChange}\r\n        />\r\n        {!isLogin && (\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            required\r\n            value={confirmPassword}\r\n            onChange={handleConfirmPasswordChange}\r\n          />\r\n        )}\r\n        <button type=\"submit\">{isLogin ? 'Login' : 'Register'}</button>\r\n      </form>\r\n\r\n      \r\n      {!isLogin && email && (\r\n        <button onClick={deleteUser} style={{ marginTop: '10px', backgroundColor: 'red', color: 'white' }}>\r\n          Delete Account\r\n        </button>\r\n      )}\r\n\r\n      <p onClick={() => setIsLogin(!isLogin)}>\r\n        {isLogin ? 'Need to register?' : 'Already have an account? Login'}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginRegister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}