{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dsrij\\\\clg\\\\sem3\\\\wt\\\\wtmini\\\\src\\\\components\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchWeather } from '../api/weatherAPI'; // Assuming fetchWeather is defined in your api module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [location, setLocation] = useState('Ranchi'); // Initial location\n  const [weather, setWeather] = useState(null); // Weather state to hold data\n  const [loading, setLoading] = useState(false); // Loading state to handle fetch status\n  const [error, setError] = useState(null); // Error state to handle API errors\n\n  // Function to fetch weather when the \"Search\" button is clicked\n  const handleSearch = async () => {\n    setLoading(true); // Set loading state to true before fetching\n    setError(null); // Clear previous errors\n    try {\n      const data = await fetchWeather(location); // Call the fetchWeather function\n      setWeather(data); // Set the weather data\n    } catch (err) {\n      setError('Failed to fetch weather data'); // Set error if fetch fails\n    } finally {\n      setLoading(false); // Set loading state to false after fetching is done\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter location\",\n        value: location,\n        onChange: e => setLocation(e.target.value) // Update location state as user types\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), \"  \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), \"  \", weather && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weather.location.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weather.current.temp_c, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Condition: \", weather.current.condition.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"YHdKNpG1UF/XWaEt1t4ur9D13Jg=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","fetchWeather","jsxDEV","_jsxDEV","HomePage","_s","location","setLocation","weather","setWeather","loading","setLoading","error","setError","handleSearch","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","name","current","temp_c","condition","text","_c","$RefreshReg$"],"sources":["C:/Users/dsrij/clg/sem3/wt/wtmini/src/components/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchWeather } from '../api/weatherAPI';  // Assuming fetchWeather is defined in your api module\r\n\r\nconst HomePage = () => {\r\n  const [location, setLocation] = useState('Ranchi');  // Initial location\r\n  const [weather, setWeather] = useState(null);  // Weather state to hold data\r\n  const [loading, setLoading] = useState(false);  // Loading state to handle fetch status\r\n  const [error, setError] = useState(null);  // Error state to handle API errors\r\n\r\n  // Function to fetch weather when the \"Search\" button is clicked\r\n  const handleSearch = async () => {\r\n    setLoading(true);  // Set loading state to true before fetching\r\n    setError(null);  // Clear previous errors\r\n    try {\r\n      const data = await fetchWeather(location);  // Call the fetchWeather function\r\n      setWeather(data);  // Set the weather data\r\n    } catch (err) {\r\n      setError('Failed to fetch weather data');  // Set error if fetch fails\r\n    } finally {\r\n      setLoading(false);  // Set loading state to false after fetching is done\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Weather App</h1>\r\n      {/* Input for location */}\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter location\"\r\n          value={location}\r\n          onChange={e => setLocation(e.target.value)}  // Update location state as user types\r\n        />\r\n        <button onClick={handleSearch}>Search</button>  {/* Trigger weather search */}\r\n      </div>\r\n\r\n      {/* Loading and error handling */}\r\n      {loading && <p>Loading...</p>}  {/* Show loading message while fetching */}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}  {/* Show error message if any */}\r\n\r\n      {/* Display weather data if available */}\r\n      {weather && !loading && (\r\n        <div>\r\n          <h2>{weather.location.name}</h2>\r\n          <p>Temperature: {weather.current.temp_c} Â°C</p>\r\n          <p>Condition: {weather.current.condition.text}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}