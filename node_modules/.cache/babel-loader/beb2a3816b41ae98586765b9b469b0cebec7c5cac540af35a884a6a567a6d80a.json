{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginRegister=()=>{const[isLogin,setIsLogin]=useState(true);const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[errorMessage,setErrorMessage]=useState('');const[successMessage,setSuccessMessage]=useState('');// Handle form field changes\nconst handleEmailChange=e=>setEmail(e.target.value);const handlePasswordChange=e=>setPassword(e.target.value);const handleConfirmPasswordChange=e=>setConfirmPassword(e.target.value);// Handle form submission\nconst handleSubmit=e=>{e.preventDefault();setErrorMessage('');setSuccessMessage('');if(isLogin){// Handle Login\nif(email==='user@example.com'&&password==='password123'){setSuccessMessage('Login successful! Welcome back.');}else{setErrorMessage('Invalid email or password.');}}else{// Handle Registration\nif(password!==confirmPassword){setErrorMessage('Passwords do not match.');}else if(!email||!password||!confirmPassword){setErrorMessage('All fields are required.');}else{setSuccessMessage('Registration successful! You can now login.');// You would typically save the user data to a database here\n}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:isLogin?'Login':'Register'}),successMessage&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:successMessage}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:errorMessage}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",required:true,value:email,onChange:handleEmailChange}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",required:true,value:password,onChange:handlePasswordChange}),!isLogin&&/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm Password\",required:true,value:confirmPassword,onChange:handleConfirmPasswordChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:isLogin?'Login':'Register'})]}),/*#__PURE__*/_jsx(\"p\",{onClick:()=>setIsLogin(!isLogin),children:isLogin?'Need to register?':'Already have an account? Login'})]});};export default LoginRegister;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","LoginRegister","isLogin","setIsLogin","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleEmailChange","e","target","value","handlePasswordChange","handleConfirmPasswordChange","handleSubmit","preventDefault","className","children","style","color","onSubmit","type","placeholder","required","onChange","onClick"],"sources":["C:/Users/dsrij/clg/sem3/wt/wtmini/src/components/LoginRegister.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst LoginRegister = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  // Handle form field changes\r\n  const handleEmailChange = (e) => setEmail(e.target.value);\r\n  const handlePasswordChange = (e) => setPassword(e.target.value);\r\n  const handleConfirmPasswordChange = (e) => setConfirmPassword(e.target.value);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage('');\r\n    setSuccessMessage('');\r\n\r\n    if (isLogin) {\r\n      // Handle Login\r\n      if (email === 'user@example.com' && password === 'password123') {\r\n        setSuccessMessage('Login successful! Welcome back.');\r\n      } else {\r\n        setErrorMessage('Invalid email or password.');\r\n      }\r\n    } else {\r\n      // Handle Registration\r\n      if (password !== confirmPassword) {\r\n        setErrorMessage('Passwords do not match.');\r\n      } else if (!email || !password || !confirmPassword) {\r\n        setErrorMessage('All fields are required.');\r\n      } else {\r\n        setSuccessMessage('Registration successful! You can now login.');\r\n        // You would typically save the user data to a database here\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>{isLogin ? 'Login' : 'Register'}</h1>\r\n\r\n      {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={handleEmailChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={handlePasswordChange}\r\n        />\r\n        {!isLogin && (\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            required\r\n            value={confirmPassword}\r\n            onChange={handleConfirmPasswordChange}\r\n          />\r\n        )}\r\n        <button type=\"submit\">{isLogin ? 'Login' : 'Register'}</button>\r\n      </form>\r\n\r\n      <p onClick={() => setIsLogin(!isLogin)}>\r\n        {isLogin ? 'Need to register?' : 'Already have an account? Login'}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginRegister;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACQ,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACY,eAAe,CAAEC,kBAAkB,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACc,YAAY,CAAEC,eAAe,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACgB,cAAc,CAAEC,iBAAiB,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAExD;AACA,KAAM,CAAAkB,iBAAiB,CAAIC,CAAC,EAAKV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACzD,KAAM,CAAAC,oBAAoB,CAAIH,CAAC,EAAKR,WAAW,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC/D,KAAM,CAAAE,2BAA2B,CAAIJ,CAAC,EAAKN,kBAAkB,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAE7E;AACA,KAAM,CAAAG,YAAY,CAAIL,CAAC,EAAK,CAC1BA,CAAC,CAACM,cAAc,CAAC,CAAC,CAClBV,eAAe,CAAC,EAAE,CAAC,CACnBE,iBAAiB,CAAC,EAAE,CAAC,CAErB,GAAIX,OAAO,CAAE,CACX;AACA,GAAIE,KAAK,GAAK,kBAAkB,EAAIE,QAAQ,GAAK,aAAa,CAAE,CAC9DO,iBAAiB,CAAC,iCAAiC,CAAC,CACtD,CAAC,IAAM,CACLF,eAAe,CAAC,4BAA4B,CAAC,CAC/C,CACF,CAAC,IAAM,CACL;AACA,GAAIL,QAAQ,GAAKE,eAAe,CAAE,CAChCG,eAAe,CAAC,yBAAyB,CAAC,CAC5C,CAAC,IAAM,IAAI,CAACP,KAAK,EAAI,CAACE,QAAQ,EAAI,CAACE,eAAe,CAAE,CAClDG,eAAe,CAAC,0BAA0B,CAAC,CAC7C,CAAC,IAAM,CACLE,iBAAiB,CAAC,6CAA6C,CAAC,CAChE;AACF,CACF,CACF,CAAC,CAED,mBACEb,KAAA,QAAKsB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBzB,IAAA,OAAAyB,QAAA,CAAKrB,OAAO,CAAG,OAAO,CAAG,UAAU,CAAK,CAAC,CAExCU,cAAc,eAAId,IAAA,MAAG0B,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAQ,CAAE,CAAAF,QAAA,CAAEX,cAAc,CAAI,CAAC,CACpEF,YAAY,eAAIZ,IAAA,MAAG0B,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAF,QAAA,CAAEb,YAAY,CAAI,CAAC,cAE/DV,KAAA,SAAM0B,QAAQ,CAAEN,YAAa,CAAAG,QAAA,eAC3BzB,IAAA,UACE6B,IAAI,CAAC,OAAO,CACZC,WAAW,CAAC,OAAO,CACnBC,QAAQ,MACRZ,KAAK,CAAEb,KAAM,CACb0B,QAAQ,CAAEhB,iBAAkB,CAC7B,CAAC,cACFhB,IAAA,UACE6B,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBC,QAAQ,MACRZ,KAAK,CAAEX,QAAS,CAChBwB,QAAQ,CAAEZ,oBAAqB,CAChC,CAAC,CACD,CAAChB,OAAO,eACPJ,IAAA,UACE6B,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,kBAAkB,CAC9BC,QAAQ,MACRZ,KAAK,CAAET,eAAgB,CACvBsB,QAAQ,CAAEX,2BAA4B,CACvC,CACF,cACDrB,IAAA,WAAQ6B,IAAI,CAAC,QAAQ,CAAAJ,QAAA,CAAErB,OAAO,CAAG,OAAO,CAAG,UAAU,CAAS,CAAC,EAC3D,CAAC,cAEPJ,IAAA,MAAGiC,OAAO,CAAEA,CAAA,GAAM5B,UAAU,CAAC,CAACD,OAAO,CAAE,CAAAqB,QAAA,CACpCrB,OAAO,CAAG,mBAAmB,CAAG,gCAAgC,CAChE,CAAC,EACD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}